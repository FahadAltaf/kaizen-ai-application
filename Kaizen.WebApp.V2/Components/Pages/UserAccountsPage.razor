@page "/accounts"
@rendermode InteractiveServer
@using Kaizen.WebApp.V2.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@attribute [Authorize(Roles = "Administrator")]
<main class="lg:pl-72 flex flex-col h-screen">
    <header class="bg-white shadow-sm">
        <div class=" max-w-7xl px-4 py-4 sm:px-6 lg:px-8">
            <h1 class="text-lg font-semibold leading-6 text-gray-900">User Accounts</h1>
        </div>
    </header>
    <div class="flex-1 overflow-y-auto p-5">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
                <p class="mt-2 text-sm text-gray-700"></p>
            </div>
            <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                <a href="/account/new" class="inline-flex items-center gap-x-1.5 rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                    </svg>Create New Account
                </a>
            </div>
        </div>
        @if (Users != null)
        {
            <div class="mt-8 flow-root">
                <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
                            <table class="min-w-full divide-y divide-gray-300">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Name</th>
                                        <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Email</th>
                                        <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                                            <span class="sr-only">Action</span>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200 bg-white">
                                    @foreach (var sheet in Users)
                                    {
                                        <tr>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@sheet.Name</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@sheet.Email</td>
                                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"></td>

                                        </tr>


                                    }

                                    <!-- More people... -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</main>

@code {
    public List<ApplicationUser> Users { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                Users = (await UserManager.GetUsersInRoleAsync("Agent")).ToList();
            }
            catch (Exception ex)
            {

            }
            finally
            {
                StateHasChanged();
            }

        }
    }
}